<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.test.spzx.manager.mapper.SysRoleMapper">

    <!--注意：
1、查询的标签select必须设置属性resultType或resultMap，用于设置实体类和数据库表的映射
关系
resultType：自动映射，用于属性名和表中字段名一致的情况
resultMap：自定义映射，用于一对多或多对一或字段名和属性名不一致的情况
2、当查询的数据为多条时，不能使用实体类作为返回值，只能使用集合，否则会抛出异常
TooManyResultsException；但是若查询的数据只有一条，可以使用实体类或集合作为返回值-->
    <!--  映射查询到的字段 -->
    <resultMap id="sysRoleMap" type="com.test.spzx.model.entity.system.SysRole" autoMapping="true"></resultMap>
    <!-- 查询所有的角色数据 -->
    <select id="findAll" resultMap="sysRoleMap">
        select <include refid="columns" />
        from sys_role where is_deleted = 0
    </select>

    <!-- 用于select查询公用抽取的列 -->
    <sql id="columns">
        id,role_name,role_code,description,create_time,update_time,is_deleted
    </sql>
    <select id="findByPage" resultMap="sysRoleMap">
        select <include refid="columns"/>
            from sys_role
                <where>
                    <if test="roleName !=null and roleName!=''">
                    and role_name like concat('%',#{roleName},'%')
                    </if>
                    and is_deleted = 0
                </where>
                order by id desc
    </select>

    <!-- 新增角色 -->
    <insert id="save">
        insert into sys_role (
            id,
            role_name,
            role_code,
            description
        ) values (
                     #{id},
                     #{roleName},
                     #{roleCode},
                     #{description}
                 )
    </insert>

    <!-- 修改角色 -->
    <update id="update">
        update sys_role set
        <if test="roleName != null and roleName != ''">
            role_name = #{roleName},
        </if>
        <if test="roleCode != null and roleCode != ''">
            role_code = #{roleCode},
        </if>
        <if test="description != null and description != ''">
            description = #{description},
        </if>
        update_time =  now()
        where
        id = #{id}
    </update>

    <!-- 根据id删除角色数据 -->
    <update id="delete">
        update sys_role set is_deleted=1 where id=#{roleId}
    </update>
</mapper>